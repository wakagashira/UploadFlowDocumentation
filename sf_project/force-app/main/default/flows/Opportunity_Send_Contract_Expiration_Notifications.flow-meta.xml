<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email</name>
        <label>Send Email</label>
        <locationX>264</locationX>
        <locationY>684</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Loop_Contracts</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Get_Opportunity.Account.Owner.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>client@setgopartners.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>Email_Subject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Email_Body</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <name>Opportunity_Found</name>
        <label>Opportunity Found?</label>
        <locationX>396</locationX>
        <locationY>576</locationY>
        <defaultConnector>
            <targetReference>Loop_Contracts</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Opportunity</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Send notifications to Opportunity owners when
  - Opportunity_Type__c == &quot;Preventative Maintenance&quot;
  - Contract__r.StartDate == TODAY() - 90 Days - 1 Year</description>
    <environments>Default</environments>
    <formulas>
        <name>Email_Subject</name>
        <dataType>String</dataType>
        <expression>&quot;The Preventative Maintenance Contract for &quot; &amp; {!Get_Opportunity.Account.Name} &amp; &quot; requires review&quot;</expression>
    </formulas>
    <formulas>
        <name>Link_To_Opportunity</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Api.Partner_Server_URL_580}, FIND(&apos;/services&apos;, {!$Api.Partner_Server_URL_580})) &amp; {!Get_Opportunity.Id}</expression>
    </formulas>
    <formulas>
        <description>We determined the Contract expiration date to be (StartDate + 1 year) and we want to send notification 90 days before this date. So we will filter on: ([Opportunity].[Contract].[StartDate]) == (TODAY() - 90 Days - 1 Year)
i.e TODAY() - 455</description>
        <name>Notification_Threshold</name>
        <dataType>Date</dataType>
        <expression>TODAY()-455</expression>
    </formulas>
    <interviewLabel>[Opportunity] Send Contract Expiration Notifications {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[Opportunity] Send Contract Expiration Notifications</label>
    <loops>
        <name>Loop_Contracts</name>
        <label>Loop Contracts</label>
        <locationX>176</locationX>
        <locationY>360</locationY>
        <collectionReference>Get_Contracts</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_Opportunity</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Contracts</name>
        <label>Get Contracts</label>
        <locationX>176</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Contracts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StartDate</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Notification_Threshold</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contract</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Opportunity</name>
        <label>Get Opportunity</label>
        <locationX>396</locationX>
        <locationY>468</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Opportunity_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContractId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Contracts.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Opportunity_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Preventative Maintenance</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Contracts</targetReference>
        </connector>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2023-08-26</startDate>
            <startTime>05:00:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>Email_Body</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hello {!Get_Opportunity.Account.Owner.FirstName},&lt;/p&gt;&lt;p&gt;The Preventative Maintenance Contract for {!Get_Opportunity.Account.Name} requires review. Please review the contract details and pricing of the {!Get_Opportunity.Name} opportunity and determine if price increases will be needed. Then create the new renewal opportunity and reach out to the customer to begin renewal discussions.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;{!Link_To_Opportunity}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;{!Get_Opportunity.Name}&lt;/a&gt;&lt;/p&gt;</text>
    </textTemplates>
</Flow>
